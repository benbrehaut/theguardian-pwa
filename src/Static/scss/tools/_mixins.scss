// ============================================================================
// Tools: Mixins
// Commonly used across all files
// ============================================================================

// ============================================================================
// Border Arrow
// ============================================================================
@mixin border-arrow($direction, $height, $arrowColor) {
  @if ($direction == down) {
		border-bottom: $height solid transparent;
		border-top: $height solid $arrowColor;
		border-left: $height solid transparent;
		border-right: $height solid transparent;
  }
  @if ($direction == up) {
		border-bottom: $height solid $arrowColor;
		border-top: $height solid transparent;
		border-left: $height solid transparent;
		border-right: $height solid transparent;
  }
  @if ($direction == right) {
		border-bottom: $height solid transparent;
		border-top: $height solid transparent;
		border-left: $height solid $arrowColor;
		border-right: $height solid transparent;
  }
  @if ($direction == left) {
		border-bottom: $height solid transparent;
		border-top: $height solid transparent;
		border-left: $height solid transparent;
		border-right: $height solid $arrowColor;
  }
}

// ============================================================================
// Button Reset
// Reset buttons to no styles
// ============================================================================
@mixin btn-reset {
	appearance: none;
  background: transparent;
  margin: 0;
  padding: 0;
  border: 0;
  text-decoration: none;
}

// ============================================================================
// Unstyled list
// Removes all basic list styling
// ============================================================================
@mixin unstyled-list {
  list-style: none;
  margin: 0;
  padding: 0;
}

// ============================================================================
// Background Image
// Includes a number of repeatable background-image items
// ============================================================================
@mixin background-img {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

// ============================================================================
// Applies the micro clearfix hack
// Include this mixin on a container if its children are all floated, to give the container a proper height.
// The clearfix is augmented with specific styles to prevent borders in flexbox environments
// ============================================================================
@mixin clearfix {
	&::after,
	&::before {
		content: ' ';
		display: table;
		flex-basis: 0;
		order: 1;
	}

	&::after {
		clear: both;
	}
}

// ============================================================================
// Makes an element visually hidden, but still accessible to keyboards and assistive devices.
// @link http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
// ============================================================================
@mixin element-invisible {
	position: absolute !important;
	width: 1px;
	height: 1px;
	overflow: hidden;
	clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap;
}

// ============================================================================
/// Reverses the output created by the `element-invisible()` mixin.
// ============================================================================
@mixin element-invisible-off {
	position: absolute !important;
	height: auto;
	width: auto;
	overflow: visible;
	clip: auto;
  white-space: nowrap;
}

// ============================================================================
// Vertically centers the element inside of its first non-static parent,
// @link http://www.sitepoint.com/centering-with-sass/
// ============================================================================
@mixin vertical-center {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
}

// ============================================================================
// Horizontally centers the element inside of its first non-static parent,
// @link http://www.sitepoint.com/centering-with-sass/
// ============================================================================
@mixin horizontal-center {
	position: absolute;
	left: 50%;
	transform: translateX(-50%);
}

// ============================================================================
// Absolutely centers the element inside of its first non-static parent,
// @link http://www.sitepoint.com/centering-with-sass/ 
// ============================================================================
@mixin absolute-center {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

// ============================================================================
// Text Rendering
// Toggle text rendering
// if 'false' then mixin won't output
// if 'true' then mixin will output
// ============================================================================
@mixin text-rendering($output) {
	@if $output == 'true' {
		-moz-osx-font-smoothing: grayscale;
		-webkit-font-smoothing: antialiased;
		text-rendering: optimizeLegibility;
	} @else if $output == 'false' {
		// output nothing
	}
}

// ============================================================================
// Hocus
// Style both Hover and Focus
// ============================================================================
@mixin hocus {
  &:hover,
  &:focus {
    @content;
  }
}


// ============================================================================
// Iterates through breakpoints in `$breakpoint-classes`
// ============================================================================
@mixin each-breakpoint($small: true) {
	$map: $breakpoint-classes;
	@if not $small {
		$map: map-remove($map, sm);
	}
	@each $size in $map {
		$-zf-size: $size !global;
		@include breakpoint($size) {
			 @content;
		}
	}
}
